// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String    @unique
  password       String
  role           Role      @default(GUEST)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  bookings       Booking[]
  guestProfile   Guest?
  staffProfile   Staff?
}

model Guest {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String    @unique @db.ObjectId
  phone         String?
  address       String?
  preferences   String?
  loyaltyPoints Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Staff {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @unique @db.ObjectId
  position    String
  department  String
  hireDate    DateTime
  salary      Float
  phoneNumber String
  address     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Room {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  number      String    @unique
  type        RoomType
  price       Float
  capacity    Int
  description String
  amenities   String[]
  status      RoomStatus @default(AVAILABLE)
  images      String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  bookings    Booking[]
}

model Booking {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  user       User          @relation(fields: [userId], references: [id])
  userId     String        @db.ObjectId
  room       Room          @relation(fields: [roomId], references: [id])
  roomId     String        @db.ObjectId
  checkIn    DateTime
  checkOut   DateTime
  guests     Int
  totalPrice Float
  status     BookingStatus @default(PENDING)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  payments   Payment[]
  services   Service[]
}

model Payment {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  booking    Booking       @relation(fields: [bookingId], references: [id])
  bookingId  String        @db.ObjectId
  amount     Float
  method     PaymentMethod
  status     PaymentStatus @default(PENDING)
  transactionId String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model Service {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  category    ServiceCategory
  booking     Booking?    @relation(fields: [bookingId], references: [id])
  bookingId   String?     @db.ObjectId
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Transaction {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  amount      Float
  description String
  type        TransactionType
  category    TransactionCategory
  date        DateTime
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

enum Role {
  ADMIN
  STAFF
  GUEST
  ACCOUNTANT
}

enum RoomType {
  STANDARD
  DELUXE
  SUITE
  EXECUTIVE
  FAMILY
}

enum RoomStatus {
  AVAILABLE
  OCCUPIED
  MAINTENANCE
  RESERVED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CHECKED_IN
  CHECKED_OUT
  CANCELLED
}

enum PaymentMethod {
  CREDIT_CARD
  DEBIT_CARD
  CASH
  BANK_TRANSFER
  PAYPAL
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum ServiceCategory {
  ROOM_SERVICE
  SPA
  RESTAURANT
  LAUNDRY
  TRANSPORT
  TOUR
  OTHER
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum TransactionCategory {
  ROOM_BOOKING
  FOOD_BEVERAGE
  MAINTENANCE
  SALARY
  UTILITIES
  MARKETING
  OTHER
}

